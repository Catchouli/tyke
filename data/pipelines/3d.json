{"textures":[],"commands":[{"tag":"SetRenderTarget","arg0":0},{"tag":"ClearRenderTarget","arg0":[{"tag":"ClearImage","clearValue":{"tag":"VFloat","arg0":1},"imageSemantic":{"tag":"Depth"}},{"tag":"ClearImage","clearValue":{"tag":"VV4F","arg0":{"w":1,"z":0.5,"x":0,"y":0}},"imageSemantic":{"tag":"Color"}}]},{"tag":"SetProgram","arg0":0},{"tag":"SetSamplerUniform","arg0":"diffuseTexture","arg1":0},{"tag":"SetRasterContext","arg0":{"arg3":{"tag":"LastVertex"},"tag":"TriangleCtx","arg0":{"tag":"CullNone"},"arg1":{"tag":"PolygonFill"},"arg2":{"tag":"NoOffset"}}},{"tag":"SetAccumulationContext","arg0":{"accViewportName":null,"tag":"AccumulationContext","accOperations":[{"tag":"DepthOp","arg0":{"tag":"Less"},"arg1":true},{"tag":"ColorOp","arg0":{"tag":"NoBlending"},"arg1":{"tag":"VV4B","arg0":{"w":true,"z":true,"x":true,"y":true}}}]}},{"tag":"RenderSlot","arg0":0}],"slots":[{"tag":"Slot","slotPrimitive":{"tag":"Triangles"},"slotStreams":{"uv":{"tag":"V2F"},"position":{"tag":"V3F"}},"slotName":"objects","slotUniforms":{"time":{"tag":"Float"},"pos":{"tag":"V3F"},"diffuseTexture":{"tag":"FTexture2D"}},"slotPrograms":[0]}],"programs":[{"programInTextures":{"diffuseTexture":{"tag":"FTexture2D"}},"tag":"Program","programOutput":[{"tag":"Parameter","ty":{"tag":"V4F"},"name":"f0"}],"programStreams":{"vi2":{"tag":"Parameter","ty":{"tag":"V2F"},"name":"uv"},"vi1":{"tag":"Parameter","ty":{"tag":"V3F"},"name":"position"}},"fragmentShader":"#version 330 core\nvec4 texture2D(sampler2D s\n              ,vec2 uv) {\n    return texture(s,uv);\n}\nuniform sampler2D diffuseTexture;\nsmooth in vec2 vo1;\nout vec4 f0;\nvoid main() {\n    f0 = texture2D (diffuseTexture\n                   ,vo1);\n}","vertexShader":"#version 330 core\nvec4 texture2D(sampler2D s\n              ,vec2 uv) {\n    return texture(s,uv);\n}\nuniform vec3 pos;\nuniform float time;\nin vec3 vi1;\nin vec2 vi2;\nsmooth out vec2 vo1;\nvec4 r1_Float;\nvec4 r2_Float;\nvec4 r3_Float;\nvec4 ext0_Float_3(vec3 z0) {\n    return vec4 ((z0).x\n                ,(z0).y\n                ,(z0).z\n                ,0.0);\n}\nvec3 neg_VecSFloat3(vec3 z0) {\n    return - (z0);\n}\nmat4 translateBefore4(vec3 z0) {\n    return mat4 (r1_Float\n                ,r2_Float\n                ,r3_Float\n                ,vec4 ((z0).x\n                      ,(z0).y\n                      ,(z0).z\n                      ,1.0));\n}\nmat4 lookat(vec3 z0\n           ,vec3 z1\n           ,vec3 z2) {\n    return (transpose (mat4\n        (ext0_Float_3 (normalize (cross\n        (z2,normalize ((z0) - (z1)))))\n        ,ext0_Float_3 (cross (normalize\n                             ((z0) - (z1))\n                             ,normalize (cross (z2\n                                               ,normalize ((z0) - (z1))))))\n        ,ext0_Float_3 (normalize\n        ((z0) - (z1)))\n        ,vec4 (0.0\n              ,0.0\n              ,0.0\n              ,1.0)))) * (translateBefore4\n        (neg_VecSFloat3 (z0)));\n}\nmat4 perspective(float z0\n                ,float z1\n                ,float z2\n                ,float z3) {\n    return mat4 (vec4\n                (((2.0) * (z0)) / (((z3) * ((z0) * (tan\n                ((z2) / (2.0))))) - ((0.0) - ((z3) * ((z0) * (tan\n                ((z2) / (2.0)))))))\n                ,0.0\n                ,0.0\n                ,0.0)\n                ,vec4 (0.0\n                      ,((2.0) * (z0)) / (((z0) * (tan\n                      ((z2) / (2.0)))) - ((0.0) - ((z0) * (tan\n                      ((z2) / (2.0))))))\n                      ,0.0\n                      ,0.0)\n                ,vec4 ((((z3) * ((z0) * (tan\n                      ((z2) / (2.0))))) + ((0.0) - ((z3) * ((z0) * (tan\n                      ((z2) / (2.0))))))) / (((z3) * ((z0) * (tan\n                      ((z2) / (2.0))))) - ((0.0) - ((z3) * ((z0) * (tan\n                      ((z2) / (2.0)))))))\n                      ,(((z0) * (tan\n                      ((z2) / (2.0)))) + ((0.0) - ((z0) * (tan\n                      ((z2) / (2.0)))))) / (((z0) * (tan\n                      ((z2) / (2.0)))) - ((0.0) - ((z0) * (tan\n                      ((z2) / (2.0))))))\n                      ,(0.0) - (((z1) + (z0)) / ((z1) - (z0)))\n                      ,-1.0)\n                ,vec4 (0.0\n                      ,0.0\n                      ,(0.0) - ((((2.0) * (z1)) * (z0)) / ((z1) - (z0)))\n                      ,0.0));\n}\nmat4 rotMatrixY(float z0) {\n    return mat4 (vec4 (cos (z0)\n                      ,0.0\n                      ,(0.0) - (sin (z0))\n                      ,0.0)\n                ,vec4 (0.0,1.0,0.0,0.0)\n                ,vec4 (sin (z0)\n                      ,0.0\n                      ,cos (z0)\n                      ,0.0)\n                ,vec4 (0.0,0.0,0.0,1.0));\n}\nmat4 projmat(vec3 z0,float z1) {\n    return ((perspective (0.1\n                         ,100.0\n                         ,0.5235987755982988\n                         ,1.0)) * (lookat (z0\n                                          ,(z0) + (vec3 (0.0,0.0,-1.0))\n                                          ,vec3 (0.0\n                                                ,1.0\n                                                ,0.0)))) * (rotMatrixY (z1));\n}\nvoid main() {\n    r1_Float = vec4 (1.0\n                    ,0.0\n                    ,0.0\n                    ,0.0);\n    r2_Float = vec4 (0.0\n                    ,1.0\n                    ,0.0\n                    ,0.0);\n    r3_Float = vec4 (0.0\n                    ,0.0\n                    ,1.0\n                    ,0.0);\n    gl_Position = (projmat (pos\n                           ,time)) * (vec4 ((vi1).x\n                                           ,(vi1).y\n                                           ,(vi1).z\n                                           ,1.0));\n    vo1 = vi2;\n}","geometryShader":null,"programUniforms":{"time":{"tag":"Float"},"pos":{"tag":"V3F"},"diffuseTexture":{"tag":"FTexture2D"}}}],"samplers":[],"tag":"Pipeline","backend":{"tag":"OpenGL33"},"streams":[],"targets":[{"tag":"RenderTarget","renderTargets":[{"tag":"TargetItem","targetSemantic":{"tag":"Depth"},"targetRef":{"tag":"Framebuffer","arg0":{"tag":"Depth"}}},{"tag":"TargetItem","targetSemantic":{"tag":"Color"},"targetRef":{"tag":"Framebuffer","arg0":{"tag":"Color"}}}]}],"info":"generated by lambdacube-compiler 0.5.0.1"}